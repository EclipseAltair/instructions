UBUNTU 18.04


-Измениение journald.conf:
nano /etc/systemd/journald.conf

-В nano заменить:
SystemMaxUse=1M

-Подключение к серверу через ssh:
ssh root@SERVER_IP_ADDRESS

-Создание пользователя:
adduser username 

-Добавление пользователя в группу sudo:
usermod -aG sudo username

-Настройка firewall:
#apt-get update
#apt-get install ufw
ufw app list
ufw allow OpenSSH	#ðàçðåøèòü OpenSSH
ufw enable		#âêëþ÷èòü
ufw status		#ñòàòóñ

-Генерация ключа на локальной машине, с которой будет осуществляться доступ к VDS:
ssh-keygen

-Добавление его на VDS сервер:
ssh-copy-id username@SERVER_IP_ADDRESS

-Ïðîâåðêà äîñòóïà ê íàøåìó ñåðâåðó ïîä íîâûì ïîëüçîâàòåëåì ñ ïîìîùüþ êëþ÷åé øèôðîâàíèÿ:
ssh username@SERVER_IP_ADDRESS

-Çàïðåò äîñòóïà ïî ïàðîëþ è äîñòóï íåïîñðåäñòâåííî ñàìîãî root ïîëüçîâàòåëÿ:
sudo nano /etc/ssh/sshd_config

-Â nano çàìåíèòü:
PermitRootLogin no
PasswordAuthentication no

-Äàëåå ïåðåçàïóñêàåì ñëóæáó SSH:
sudo systemctl reload sshd

-Óñòàíîâêà çàâèñèìîñòåé:
#óäàëèòü apache2
sudo apt-get update
sudo apt-get install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx git

-Èçìåíèì ïîëüçîâàòåëÿ è âîéäžì êàê postgres:
sudo -u postgres psql


POSTGRESQL


-Ñîçäàíèå NAME áàçû äàííûõ (ïî settings.py):
CREATE DATABASE myproject;

-Ñîçäàíèå USER áàçû äàííûõ ïî PASSWORD (ïî settings.py):
CREATE USER myprojectuser WITH PASSWORD 'password';

-Èçìåíåíèå íàñòðîåê
ALTER ROLE myprojectuser SET client_encoding TO 'utf8';
ALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed';
ALTER ROLE myprojectuser SET timezone TO 'UTC';

-Ïåðåäà÷à íîâîìó ïîëüçîâàòåëþ ïðàâà íà äîñòóï ê ýòîé áàçå äàííûõ:
GRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser;

-Çàêðûòü êîìàíäíóþ ñòðîêó postgresql:
\q


VIRTUALENV


-Óñòàíàâëèâàåì virtualenv:
sudo -H pip3 install --upgrade pip
sudo -H pip3 install virtualenv

-Ñîçäàíèå êàòàëîãà äëÿ ïðèëîæåíèÿ è ïåðåõîä â íåãî:
mkdir ~/myprojectdir
cd ~/myprojectdir

-Ñîçäàíèå âèðòóàëüíîãî îêðóæåíèÿ:
virtualenv myprojectenv

-Çàïóñê âèðòóàëüíîãî îêðóæåíèÿ: 
source myprojectenv/bin/activate


GIT


-Çàãðóçêà ïðîåêòà ñ github:
git init .
git remote add origin https://github.com/User/project.git
git pull origin master


DJANGO


-Óñòàíîâêà çàâèñèìîñòåé:
pip install -r requirements.txt
pip install gunicorn

-Ïåðåíîñ ÁÄ:
python3 manage.py makemigrations [apps...]
python3 manage.py migrate
python3 manage.py dbshell
delete from auth_group_permissions; delete from auth_permission; delete from django_admin_log; delete from django_content_type;
\q
#ñíà÷àëà íà ëîêàëå "py manage.py dumpdata > dump.json"
python3 manage.py loaddata dump.json

-----------------------------------------
-ÎØÈÁÊÀ "DETAIL: Key (app_label, model)=(main, price) already exists.":
python3 manage.py dbshell
delete from auth_group_permissions; delete from auth_permission; delete from django_admin_log; delete from django_content_type;

-ÎØÈÁÊÀ "DETAIL: Key (app_label, model)=(admin, logentry) already exists." - createsuperuser óæå âûïîëíåí íà ñåðâåðå:
python3 manage.py dbshell
TRUNCATE django_content_type CASCADE;
-----------------------------------------

-Ñáîð ñòàòè÷åñêèõ ôàéëîâ:
python3 manage.py collectstatic

-Ðàçáëîêèðîâêà 8000 ïîðòà:
sudo ufw allow 8000

-Òåñò ñåðâåðà:
python3 manage.py runserver 0.0.0.0:8000

-Çàïóñê gunicorn:
cd ~/myproject
gunicorn --bind 0.0.0.0:8000 myproject.wsgi:application

-Ðàçáëîêèðîâêà 80 ïîðòà:
sudo ufw allow 80


NGINX


-Ðåäàêòèðîâàíèå êîíôèãóðàöèîííîãî ôàéëà Nginx:
sudo nano /etc/nginx/sites-available/default

-Â nano âñž óäàëèòü è âñòàâèòü:
server {
    listen 80;
    server_name 255.255.255.255; # çäåñü ïðîïèñàòü èëè IP-àäðåñ èëè äîìåííîå èìÿ ñåðâåðà
    #access_log  /var/log/nginx/example.log;
    #error_log   /var/log/nginx/error.log;
 
    location /static/ {
        root /home/user/myproject/static;
        expires 30d;
    }
 
    location /media {
        root /home/user/myproject/static;
        expires 30d;
    }
 
    location / {
        proxy_pass http://127.0.0.1:8000; 
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

-Ïðàâà äëÿ çàïèñè â media:
sudo chmod 777 /home/user/myproject/static/media

-Ïåðåçàïóñê Nginx:
sudo service nginx restart

-Çàïóñê gunicorn:
gunicorn myproject.wsgi:application

-Îòêëþ÷åíèå âèðòóëüàíîå îêðóæåíèå:
deactivate


SUPERVISOR


-Óñòàíîâêà supervisor:
sudo apt-get install supervisor

-Ñîçäàíèå êîíôèãóðàöèîííîãî ôàéëà:
cd /home/user/myproject/myproject 	# êàòàëîã ñ settings.py
touch gunicorn.conf.py
nano gunicorn.conf.py

-Â nano ïèøåì:
bind = '127.0.0.1:8000'
workers = 3		# workers=Ncpu+1
user = "nobody"

-(îò root) Ñîçäàíèå êîíôèãóðàöèþ ñàìîãî supervisor:
cd /etc/supervisor/conf.d/
touch myproject.conf
nano myproject.conf

-(îò root) Â nano ïèøåì:
[program:myproject]
command=/home/user/myproject/myprojectenv/bin/gunicorn myproject.wsgi:application -c /home/user/myproject/myproject/gunicorn.conf.py
directory=/home/user/myproject
user=nobody
autorestart=true
redirect_stderr=true

-Ïðèíóäèòåëüíîå äîáàâëåíèå supervisor â àâòîçàãðóçêó:
sudo update-rc.d supervisor enable

-Çàïóñê supervisor:
sudo service supervisor start

-Êîìàíäû äëÿ supervisor:
supervisorctl reread	# äàåò ñóïåðâèçîðó èíôó, ÷òî ïîìåíÿëñÿ êîíôèã
supervisorctl update	# ïåðåçàïóñêàåì òîëüêî òå âîðêåðû, äëÿ êîòîðûõ ïîìåíÿëàñü êîíôèãóðàöèÿ
supervisorctl status myproject
supervisor restart myproject	# åñëè èçìåíèëè êîä âîðêåðîâ

-Îñòàíîâêà ìàøèíû â êîíñîëè:
shutdown -r now

-Ïåðåçàïóñê ïîñëå èçìíåíèé â ïðîåêòå:
sudo killall gunicorn

______________
-×èñòêà êýøà
apt-get install packagekit-tools
pkcon refresh force -c -1
